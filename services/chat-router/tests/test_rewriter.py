import pytest

from hive.chat_router.brain import router
from hive.chat_router.service import Service

from .util import make_test_request


@pytest.mark.parametrize(
    "user_input,want_rewrite",
    (("Check presents in office& maybe order another 4 Kay/mara/milo",
      "check presents in office and maybe order another 4 kay or mara "
      "or milo"),
     ("+find a pokedex for Eli ",
      "and find a pokedex for eli"),
     ("hi piggle",
      ""),
     ("ping?",
      "ping ?"),
     ("ping",
      ""),
     ("hello!",
      "hello !"),
     ("bonjour!",
      "bonjour !"),
     ("bonjour",
      ""),
     ("test\u2714\ufe0f",
      "test"),
     ("test\ud83d\udc4d",
      "test"),
     ("interesting?",
      "interesting"),
     ("briefly describe krokodil",
      ""),
     ("What's a good word or phrase for 'close together in time'? As "
      "in, do these two events as close together in time as possible?",
      "what is a good word or phrase for 'close together in time' ? as "
      "in , do these two events as close together in time as possible"),
     ("are you there?",
      "are you there"),
     ("What is Tank Tactics?",
      "what is tank tactics"),
     ("do u not get reactions then?",
      "do you not get reactions then"),
     ("Hello from phoneland!\ud83d\ude38",
      "hello from phoneland !"),
     ("to the moon!",
      "to the moon"),
     ("hello",
      ""),
     ("ah not this again!",
      "ah not this again"),
     ("Beetle colouring page pls",
      "beetle colouring page"),
     ("share The partial lunar eclipse in the UK will be visible - "
      "weather permitting - during the early hours of 14 March from "
      "3:57 GMT before peaking at 6:19. The best chance of seeing it "
      "is by having a clear view of the western horizon. The moon will "
      "set soon after the peak eclipse - at around 6:22 so your best "
      "bet is to look out earlier rather than later.",
      "share the partial lunar eclipse in the uk will be visible weather "
      "permitting during the early hours of 14 march from 3 57 gmt "
      "before peaking at 6 19 . the best chance of seeing it is by "
      "having a clear view of the western horizon . the moon will "
      "set soon after the peak eclipse at around 6 22 so your best "
      "bet is to look out earlier rather than later"),
     ("Hi!",
      "hi !"),
     ("hi!",
      "hi !"),
     ("?",
      ""),
     ("hi?",
      "hi ?"),
     ("hello?",
      "hello ?"),
     ("Bonjour?",
      "bonjour ?"),
     ("Yo",
      "yo"),
     ("Hello",
      "hello"),
     ("Hi?",
      "hi ?"),
     ("Ping",
      "ping"),
     ("good morning",
      "hi"),
     ("pong",
      ""),
     ("Hello!",
      "hello !"),
     ("pong??",
      "pong ? ?"),
     ("Hi Hivetool",
      "hi hivetool"),
     ("pls ocr\ud83d\ude4f",
      "ocr"),
     ("remind me about fleas",
      ""),
     ("ELIZA\u2014a computer program for the study of natural language "
      "communication between man and machine",
      "eliza a computer program for the study of natural language "
      "communication between man and machine"),
     ("Hi",
      "hi"),
     ("Bonjour",
      "bonjour"),
     ("Hello?",
      "hello ?"),
     ("Balls",
      "balls"),
     ("Xov",
      "xov"),
     ("What up?",
      "what up"),
     ("Yo!",
      "yo !"),
     ("Ping?",
      "ping ?"),
     ("Remind me about bugs",
      "remind me about bugs"),
     ("Bugs?",
      "bugs"),
     ("Bugs!!",
      "bugs"),
     ("\ud83e\udeb2?",
      "\a"),
     ("\ud83e\udeb2\ud83d\udc1b\ud83d\udd77\ufe0f!!",
      "\a"),
     ("Salop",
      "salop"),
     ("Salut?",
      "salop"),
     ("share \n\n\u201cEveryone should be vaccinated.\u201d\n\nThere "
      "is \u201cno benefit to getting measles\u201d, Louisiana "
      "Republican and medical doctor Bill Cassidy,",
      "share everyone should be vaccinated . there is no benefit to "
      "getting measles , louisiana republican and medical doctor bill "
      "cassidy"),
     ("bonjour?",
      "bonjour ?"),
     ("wtg",
      ""),
     ("* wtf",
      "wtf"),
     ("hellom",
      ""),
     ("maybe now?",
      "maybe now"),
     ("New York times email",
      "new york times email"),
     ("Generate two random words ",
      "random two words"),
     ("Generate a random male name",
      "random male name"),
     ("Hive?",
      "hi !"),
     ("hi",
      ""),
     ("please salop?",
      "salop ?"),
     ("salop please?",
      "salop please ?"),
     ("can you salop now?",
      "salop now ?"),
     ("xox salop",
      ""),
     ("what's your paterns?",
      "show paterns"),
     ("show patterns",
      "patterns"),
     ("bnjour",
      ""),
     ("bonjoru",
      ""),
     ("sallop",
      ""),
     ("wallop",
      ""),
     ("walop",
      ""),
     ("aslop",
      ""),
     ("patterns?",
      "patterns"),
     ("graph?",
      "patterns"),
     ("what's my royal mail email?",
      "show royal mail email"),
     ("email for smol?",
      "email for smol"),
     ("dave's email?",
      "dave's email"),
     ("minecraft email?",
      "minecraft email"),
     ("minecraft password",
      ""),
     ("slippy passwd",
      "slippy password"),
     ("sausages",
      ""),
     ("draw sausages",
      ""),
     ("imgaine sausages",
      ""),
     ("imagine sausages",
      ""),
     ("make a colouring page of sausages",
      "generate colouring page of sausages"),
     ("make a coloring page of sausages",
      "generate coloring page of sausages"),
     ("please draw a coloring page of sausages",
      "draw coloring page of sausages"),
     ("please create a child's colouring page featuring a red kite",
      "generate child's colouring page featuring a red kite"),
     ("render sausages please",
      "render sausages"),
     ("turn off the wifi",
      ""),
     ("wifi on pls",
      "wifi on"),
     ("wifi off pls",
      "wifi off"),
     ("cut the internet",
      ""),
     ("What's my screwfix password?",
      "show screwfix password"),
     ("What's my screw fix password?",
      "show screw fix password"),
     ("WiFi off",
      "wifi off"),
     ("WiFi on",
      "wifi on"),
     ("Make a colouring page of sausages",
      "generate colouring page of sausages"),
     ("Please draw potato chips in the shape of Russian matrioshka dolls",
      "draw potato chips in the shape of russian matrioshka dolls"),
     ("share \u201cHe'ershingenmosiken\u201d",
      "share he'ershingenmosiken"),
     ("Remind me about bugs",
      "remind me about bugs"),
     ("make me an email for smol",
      "generate email for smol"),
     ("make me an email+password for smol (pls!)",
      "generate email and password for smol"),
     ("make a login for wool warehouse",
      "generate login for wool warehouse"),
     ("generate a password for wool warehouse",
      "generate password for wool warehouse"),
     ("block @infomails.microsoft.com",
      "block @ infomails . microsoft . com"),
     ("briefly describe babushka",
      ""),
     ("smol, who  are you?!",
      "smol , who are you"),
     ("qwen, who is Serendra Grey?",
      "qwen , who is serendra grey"),
     ("generate two random words",
      "random two words"),
     ("please generate 4 random words",
      "random 4 words"),
     ("can you create a random word please",
      "random word"),
     ("generate a random male name",
      "random male name"),
     ("random word",
      ""),
     ("random verb",
      ""),
     ("four nouns?",
      "random four nouns"),
     ("gender-neutral name?",
      "random gender neutral name"),
     ("neutral name?",
      "random neutral name"),
     ("pick a female name",
      "random female name"),
     ("pick a word",
      "random word"),
     ("choose a name",
      "random name"),
     ('can you say "ping"?',
      "say ping"),
     ))
def test_rewriter(mock_channel, user_input, want_rewrite, no_spellcheck):
    try:
        router.dispatch(make_test_request(user_input), Service(), mock_channel)
    except NotImplementedError:
        pass
    assert router.request.text == user_input
    assert want_rewrite != user_input
    if not want_rewrite:
        want_rewrite = user_input
    assert router.request.match.match == want_rewrite
