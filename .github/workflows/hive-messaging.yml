name: hive-messaging

on:
  push:
    branches:
      - main
      - candidate
      - hive-messaging
    tags:
      - "hive-messaging-[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    name: Build and test hive-messaging
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: libs/messaging

    services:
      rabbitmq:
        image: rabbitmq:3
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - 5672

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build+test requirements
        run: >-
          python3 -m
          pip install --user -r ../../ci/requirements.txt

      - name: Write __version__.py
        if: startsWith(github.ref, 'refs/tags/hive-messaging-')
        run: ../../ci/write-version-py hive/messaging

      - name: Lint
        run: flake8

      - name: Build distribution packages
        run: python3 -m build

      - name: Install packages
        run: >-
          python3 -m
          pip install --user dist/*.whl

      - name: Test packages
        run: pytest
        env:
          RABBITMQ_HOST: localhost
          RABBITMQ_PORT: ${{ job.services.rabbitmq.ports['5672'] }}

      - name: Upload tested packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: libs/messaging/dist

  publish-to-pypi:
    name: Publish hive-messaging to PyPI
    if: startsWith(github.ref, 'refs/tags/hive-messaging-')
    needs:
      - build
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/hive-messaging

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Restore required artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist

      - name: Publish Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign the Python distribution with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
      - name: Restore required artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            dist/*.tar.gz
            dist/*.whl

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""

      - name: Upload packages and signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
