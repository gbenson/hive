log_format json escape=json '{'
    '"net_gbenson_logger":"nginx",'
    '"remote_addr":"$remote_addr",'
    '"remote_user":"$remote_user",'
    '"http_host":"$http_host",'
    '"request_method":"$request_method",'
    '"request_uri":"$request_uri",'
    '"server_protocol":"$server_protocol",'
    '"ssl_protocol":"$ssl_protocol",'
    '"status":$status,'
    '"body_bytes_sent":$body_bytes_sent,'
    '"http_user_agent":"$http_user_agent",'
    '"http_referer":"$http_referer",'
    '"request_length":$request_length,'
    '"timestamp":$msec'
'}';

access_log off;

server {
    listen 443 ssl default_server;
    server_name $DEFAULT_HOSTNAME;
    ssl_certificate /etc/letsencrypt/live/$DEFAULT_HOSTNAME/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$DEFAULT_HOSTNAME/privkey.pem;
    include snippets/common-server-setup.conf;
}

server {
    listen 443 ssl;
    server_name www.$SERVICE_HOSTNAME;
    ssl_certificate /etc/letsencrypt/live/www.$SERVICE_HOSTNAME/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.$SERVICE_HOSTNAME/privkey.pem;
    include snippets/common-server-setup.conf;

    # Redirect everything to the site without the "www." prefix.
    location / {
        return 301 https://$SERVICE_HOSTNAME$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name $SERVICE_HOSTNAME;
    ssl_certificate /etc/letsencrypt/live/$SERVICE_HOSTNAME/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$SERVICE_HOSTNAME/privkey.pem;
    include snippets/common-server-setup.conf;

    # $LOG_SPOOLER_PATH is the URL prefix of the log-spooler service.
    location = /$LOG_SPOOLER_PATH {
        return 301 https://$host$request_uri/;
    }
    location /$LOG_SPOOLER_PATH/ {
        proxy_pass http://log-spooler:5125;

        auth_basic "Authorization required";
        auth_basic_user_file /etc/nginx/log-spooler.htpasswd;

        gzip on;
        gzip_types application/jsonl;
    }

    # $OLLAMA_PATH is the URL prefix of the Ollama service.
    location = /$OLLAMA_PATH {
        return 301 https://$host$request_uri/;
    }
    location /$OLLAMA_PATH/ {
        proxy_pass http://ollama:11434;

        auth_basic "Authorization required";
        auth_basic_user_file /etc/nginx/ollama.htpasswd;

        rewrite ^/$OLLAMA_PATH(/.*)$ $1 break;

        # Support WebSocket, SSE
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Support response streaming
        proxy_buffering off;
    }

    # $WG_ARTICLE_PATH is the short URL prefix of the MediaWiki site.
    location = /$WG_ARTICLE_PATH {
        return 301 https://$host$request_uri/;
    }
    rewrite ^/$WG_ARTICLE_PATH(/.*)$ /$WG_SCRIPT_PATH/index.php break;

    # WG_SCRIPT_PATH is the URL base path of the MediaWiki site.
    location = /$WG_SCRIPT_PATH {
        return 301 https://$host$request_uri/;
    }
    rewrite ^/$WG_SCRIPT_PATH/$ /$WG_SCRIPT_PATH/index.php break;
    location /$WG_SCRIPT_PATH/ {
        auth_basic "Authorization required";
        auth_basic_user_file /etc/nginx/mediawiki.htpasswd;

        location ~ \.php$ {
            fastcgi_split_path_info ^/$WG_SCRIPT_PATH(/.+\.php)(/?.*)$;
            fastcgi_pass mediawiki-fpm:9000;
            fastcgi_index index.php;

            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME /var/www/html/$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;

            fastcgi_hide_header X-Powered-By;
            fastcgi_hide_header X-Frame-Options;

            client_max_body_size 100m;
        }
    }

    # WG_RESOURCE_BASE_PATH is the URL base path of the MediaWiki site's
    # static resources (images, scripts, etc.)
    location = /$WG_RESOURCE_BASE_PATH {
        return 301 https://$host$request_uri/;
    }
    location /$WG_RESOURCE_BASE_PATH/ {
        auth_basic "Authorization required";
        auth_basic_user_file /etc/nginx/mediawiki.htpasswd;

	rewrite ^/$WG_RESOURCE_BASE_PATH(/.*)$ $1 break;

        root /usr/share/nginx/mediawiki-static;
    }

    # WG_UPLOAD_PATH is the URL base path of the MediaWiki site's user uploads.
    location = /$WG_UPLOAD_PATH {
        return 301 https://$host$request_uri/;
    }
    location /$WG_UPLOAD_PATH/ {
        auth_basic "Authorization required";
        auth_basic_user_file /etc/nginx/mediawiki.htpasswd;

	rewrite ^/$WG_UPLOAD_PATH(/.*)$ $1 break;

        root /usr/share/nginx/mediawiki-uploads;
    }
}
